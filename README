cmdOutput, err := cmd.Output()
    if err != nil {
        fmt.Printf("Error listing instances in region %s: %s\n", region, err)
        return
    }

    output := strings.TrimSpace(string(cmdOutput))
    if output == "" {
        fmt.Println("No instances found in this region.")
        return
    }

    lines := strings.Split(output, "\n")
    if len(lines)%2 != 0 {
        fmt.Println("Unexpected output format.")
        return
    }

    instances := make([][2]string, 0, len(lines)/2)
    for i := 0; i < len(lines); i += 2 {
        instances = append(instances, [2]string{lines[i], lines[i+1]})
    }

    for i, instance := range instances {
        fmt.Printf("%d. %s (%s)\n", i+1, instance[0], instance[1])
    }

    fmt.Println("Select an instance by number to connect or enter 0 to exit:")
    reader := bufio.NewReader(os.Stdin)
    input, _ := reader.ReadString('\n')
    input = strings.TrimSpace(input)
    selection, err := fmt.Sscanf(input, "%d", &input)
    if err != nil || selection < 1 || selection > len(instances) {
        fmt.Println("Invalid selection, exiting.")
        return
    }
    selectedInstance := instances[selection-1]
    connectToInstance(selectedInstance[0], region) // Assuming this function is implemented elsewhere
}
