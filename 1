func connectInstance(cmd *cobra.Command, args []string) {
    instanceID := args[0]
    region, err := findInstanceRegion(instanceID)
    if err != nil {
        fmt.Println("Error finding instance:", err)
        return
    }

    fmt.Printf("Connecting to instance %s in region \"%s\"...\n", instanceID, region)

    err = startSSMSession(instanceID, region)
    if err != nil {
        fmt.Println("Error starting SSM session:", err)
        return
    }
}

func findInstanceRegion(instanceID string) (string, error) {
    // Get the list of regions
    cmd := exec.Command("aws", "ec2", "describe-regions", "--query", "Regions[].RegionName", "--output", "text")
    var out bytes.Buffer
    cmd.Stdout = &out
    err := cmd.Run()
    if err != nil {
        return "", err
    }
    regions := strings.Fields(out.String())

    // Iterate over each region and check for the instance
    for _, region := range regions {
        cmd = exec.Command("aws", "ec2", "describe-instances", "--region", region, "--instance-ids", instanceID)
        var regionOut bytes.Buffer
        cmd.Stdout = &regionOut
        err := cmd.Run()
        if err == nil {
            // Instance found in this region
            return region, nil
        }
        // Continue to the next iteration
    }
    return "", fmt.Errorf("instance ID %s not found in any region", instanceID)
}

